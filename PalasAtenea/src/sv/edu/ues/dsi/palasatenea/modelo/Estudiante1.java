package sv.edu.ues.dsi.palasatenea.modelo;

// Generated 10-18-2014 06:33:11 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Estudiante1 generated by hbm2java
 */
@Entity
@Table(name = "estudiante1", catalog = "palasatenea")
public class Estudiante1 implements java.io.Serializable {

	private Estudiante1Id id;
	private Administrador administrador;
	private Padrefamilia padrefamilia;
	private Anolectivo anolectivo;
	private Usuario usuario;
	private String esnombres;
	private String esapellidos;
	private Date esfnacimiento;
	private String esceprocedencia;
	private String esnivelcursar;
	private String esdirecccasa;
	private String esenfermedad;
	private String esmedicinasuministrar;
	private String esmedicinanosumistrar;
	private String esproblemaprendizaje;
	private char essexto;
	private Set<Materia> materias = new HashSet<Materia>(0);
	private Set<Grado> grados = new HashSet<Grado>(0);
	private Set<Nota> notas = new HashSet<Nota>(0);

	public Estudiante1() {
	}

	public Estudiante1(Estudiante1Id id, Usuario usuario, String esnombres,
			String esapellidos, Date esfnacimiento, String esceprocedencia,
			String esnivelcursar, String esdirecccasa, String esenfermedad,
			String esmedicinasuministrar, String esmedicinanosumistrar,
			String esproblemaprendizaje, char essexto) {
		this.id = id;
		this.usuario = usuario;
		this.esnombres = esnombres;
		this.esapellidos = esapellidos;
		this.esfnacimiento = esfnacimiento;
		this.esceprocedencia = esceprocedencia;
		this.esnivelcursar = esnivelcursar;
		this.esdirecccasa = esdirecccasa;
		this.esenfermedad = esenfermedad;
		this.esmedicinasuministrar = esmedicinasuministrar;
		this.esmedicinanosumistrar = esmedicinanosumistrar;
		this.esproblemaprendizaje = esproblemaprendizaje;
		this.essexto = essexto;
	}

	public Estudiante1(Estudiante1Id id, Administrador administrador,
			Padrefamilia padrefamilia, Anolectivo anolectivo, Usuario usuario,
			String esnombres, String esapellidos, Date esfnacimiento,
			String esceprocedencia, String esnivelcursar, String esdirecccasa,
			String esenfermedad, String esmedicinasuministrar,
			String esmedicinanosumistrar, String esproblemaprendizaje,
			char essexto, Set<Materia> materias, Set<Grado> grados,
			Set<Nota> notas) {
		this.id = id;
		this.administrador = administrador;
		this.padrefamilia = padrefamilia;
		this.anolectivo = anolectivo;
		this.usuario = usuario;
		this.esnombres = esnombres;
		this.esapellidos = esapellidos;
		this.esfnacimiento = esfnacimiento;
		this.esceprocedencia = esceprocedencia;
		this.esnivelcursar = esnivelcursar;
		this.esdirecccasa = esdirecccasa;
		this.esenfermedad = esenfermedad;
		this.esmedicinasuministrar = esmedicinasuministrar;
		this.esmedicinanosumistrar = esmedicinanosumistrar;
		this.esproblemaprendizaje = esproblemaprendizaje;
		this.essexto = essexto;
		this.materias = materias;
		this.grados = grados;
		this.notas = notas;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "ucarnetusuario", column = @Column(name = "UCARNETUSUARIO", nullable = false, length = 8)),
			@AttributeOverride(name = "escarnet", column = @Column(name = "ESCARNET", nullable = false, length = 8)) })
	public Estudiante1Id getId() {
		return this.id;
	}

	public void setId(Estudiante1Id id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ADM_UCARNETUSUARIO", referencedColumnName = "UCARNETUSUARIO"),
			@JoinColumn(name = "ACARNET", referencedColumnName = "ACARNET") })
	public Administrador getAdministrador() {
		return this.administrador;
	}

	public void setAdministrador(Administrador administrador) {
		this.administrador = administrador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PAD_UCARNETUSUARIO", referencedColumnName = "UCARNETUSUARIO"),
			@JoinColumn(name = "PACARNETPA", referencedColumnName = "PACARNETPA") })
	public Padrefamilia getPadrefamilia() {
		return this.padrefamilia;
	}

	public void setPadrefamilia(Padrefamilia padrefamilia) {
		this.padrefamilia = padrefamilia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACODANO")
	public Anolectivo getAnolectivo() {
		return this.anolectivo;
	}

	public void setAnolectivo(Anolectivo anolectivo) {
		this.anolectivo = anolectivo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UCARNETUSUARIO", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "ESNOMBRES", nullable = false, length = 25)
	public String getEsnombres() {
		return this.esnombres;
	}

	public void setEsnombres(String esnombres) {
		this.esnombres = esnombres;
	}

	@Column(name = "ESAPELLIDOS", nullable = false, length = 25)
	public String getEsapellidos() {
		return this.esapellidos;
	}

	public void setEsapellidos(String esapellidos) {
		this.esapellidos = esapellidos;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ESFNACIMIENTO", nullable = false, length = 10)
	public Date getEsfnacimiento() {
		return this.esfnacimiento;
	}

	public void setEsfnacimiento(Date esfnacimiento) {
		this.esfnacimiento = esfnacimiento;
	}

	@Column(name = "ESCEPROCEDENCIA", nullable = false, length = 50)
	public String getEsceprocedencia() {
		return this.esceprocedencia;
	}

	public void setEsceprocedencia(String esceprocedencia) {
		this.esceprocedencia = esceprocedencia;
	}

	@Column(name = "ESNIVELCURSAR", nullable = false, length = 15)
	public String getEsnivelcursar() {
		return this.esnivelcursar;
	}

	public void setEsnivelcursar(String esnivelcursar) {
		this.esnivelcursar = esnivelcursar;
	}

	@Column(name = "ESDIRECCCASA", nullable = false, length = 50)
	public String getEsdirecccasa() {
		return this.esdirecccasa;
	}

	public void setEsdirecccasa(String esdirecccasa) {
		this.esdirecccasa = esdirecccasa;
	}

	@Column(name = "ESENFERMEDAD", nullable = false, length = 100)
	public String getEsenfermedad() {
		return this.esenfermedad;
	}

	public void setEsenfermedad(String esenfermedad) {
		this.esenfermedad = esenfermedad;
	}

	@Column(name = "ESMEDICINASUMINISTRAR", nullable = false, length = 100)
	public String getEsmedicinasuministrar() {
		return this.esmedicinasuministrar;
	}

	public void setEsmedicinasuministrar(String esmedicinasuministrar) {
		this.esmedicinasuministrar = esmedicinasuministrar;
	}

	@Column(name = "ESMEDICINANOSUMISTRAR", nullable = false, length = 100)
	public String getEsmedicinanosumistrar() {
		return this.esmedicinanosumistrar;
	}

	public void setEsmedicinanosumistrar(String esmedicinanosumistrar) {
		this.esmedicinanosumistrar = esmedicinanosumistrar;
	}

	@Column(name = "ESPROBLEMAPRENDIZAJE", nullable = false, length = 100)
	public String getEsproblemaprendizaje() {
		return this.esproblemaprendizaje;
	}

	public void setEsproblemaprendizaje(String esproblemaprendizaje) {
		this.esproblemaprendizaje = esproblemaprendizaje;
	}

	@Column(name = "ESSEXTO", nullable = false, length = 1)
	public char getEssexto() {
		return this.essexto;
	}

	public void setEssexto(char essexto) {
		this.essexto = essexto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estudiante1")
	public Set<Materia> getMaterias() {
		return this.materias;
	}

	public void setMaterias(Set<Materia> materias) {
		this.materias = materias;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "cursa", catalog = "palasatenea", joinColumns = {
			@JoinColumn(name = "UCARNETUSUARIO", nullable = false, updatable = false),
			@JoinColumn(name = "ESCARNET", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "GCODGRADO", nullable = false, updatable = false) })
	public Set<Grado> getGrados() {
		return this.grados;
	}

	public void setGrados(Set<Grado> grados) {
		this.grados = grados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estudiante1")
	public Set<Nota> getNotas() {
		return this.notas;
	}

	public void setNotas(Set<Nota> notas) {
		this.notas = notas;
	}

}
