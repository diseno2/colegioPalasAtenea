package sv.edu.ues.dsi.palasatenea.modelo;

// Generated 10-18-2014 06:33:11 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Docente generated by hbm2java
 */
@Entity
@Table(name = "docente", catalog = "palasatenea")
public class Docente implements java.io.Serializable {

	private DocenteId id;
	private Administrador administrador;
	private Usuario usuario;
	private String docnombre;
	private String docgradoimparte;
	private String docmateriaimparte;
	private Set<Materia> materias = new HashSet<Materia>(0);
	private Set<Nota> notas = new HashSet<Nota>(0);

	public Docente() {
	}

	public Docente(DocenteId id, Usuario usuario, String docnombre,
			String docgradoimparte, String docmateriaimparte) {
		this.id = id;
		this.usuario = usuario;
		this.docnombre = docnombre;
		this.docgradoimparte = docgradoimparte;
		this.docmateriaimparte = docmateriaimparte;
	}

	public Docente(DocenteId id, Administrador administrador, Usuario usuario,
			String docnombre, String docgradoimparte, String docmateriaimparte,
			Set<Materia> materias, Set<Nota> notas) {
		this.id = id;
		this.administrador = administrador;
		this.usuario = usuario;
		this.docnombre = docnombre;
		this.docgradoimparte = docgradoimparte;
		this.docmateriaimparte = docmateriaimparte;
		this.materias = materias;
		this.notas = notas;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "ucarnetusuario", column = @Column(name = "UCARNETUSUARIO", nullable = false, length = 8)),
			@AttributeOverride(name = "doccarnet", column = @Column(name = "DOCCARNET", nullable = false, length = 10)) })
	public DocenteId getId() {
		return this.id;
	}

	public void setId(DocenteId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ADM_UCARNETUSUARIO", referencedColumnName = "UCARNETUSUARIO"),
			@JoinColumn(name = "ACARNET", referencedColumnName = "ACARNET") })
	public Administrador getAdministrador() {
		return this.administrador;
	}

	public void setAdministrador(Administrador administrador) {
		this.administrador = administrador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UCARNETUSUARIO", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "DOCNOMBRE", nullable = false, length = 10)
	public String getDocnombre() {
		return this.docnombre;
	}

	public void setDocnombre(String docnombre) {
		this.docnombre = docnombre;
	}

	@Column(name = "DOCGRADOIMPARTE", nullable = false, length = 10)
	public String getDocgradoimparte() {
		return this.docgradoimparte;
	}

	public void setDocgradoimparte(String docgradoimparte) {
		this.docgradoimparte = docgradoimparte;
	}

	@Column(name = "DOCMATERIAIMPARTE", nullable = false, length = 10)
	public String getDocmateriaimparte() {
		return this.docmateriaimparte;
	}

	public void setDocmateriaimparte(String docmateriaimparte) {
		this.docmateriaimparte = docmateriaimparte;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "docente")
	public Set<Materia> getMaterias() {
		return this.materias;
	}

	public void setMaterias(Set<Materia> materias) {
		this.materias = materias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "docente")
	public Set<Nota> getNotas() {
		return this.notas;
	}

	public void setNotas(Set<Nota> notas) {
		this.notas = notas;
	}

}
